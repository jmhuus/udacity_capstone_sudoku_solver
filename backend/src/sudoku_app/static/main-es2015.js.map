{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/board-of-the-day/board-of-the-day.component.ts","./src/app/board-of-the-day/board-of-the-day.component.html","./src/app/board/board.component.ts","./src/app/board/board.component.html","./src/app/board/board.ts","./src/app/services/auth.service.ts","./src/app/services/http.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;SAClD,EACD;YACE,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;SAClD,CACF,CAAC;QACF,OAAO,UAAU,CAAC;IACpB,CAAC;CACF;;;;;;;;;;;;;ACjED;AAAA;AAAA;AAAA;AAA2C;AACW;;AAEtD,MAAM,cAAc,GAAG,gBAAgB,CAAC;AACxC,MAAM,qBAAqB,GAAG,uBAAuB,CAAC;AAK/C,MAAM,WAAW;IAMtB,gBAAgB,CAAC;IAEjB,mCAAmC;IACnC,oBAAoB;QAClB,qBAAqB;QACrB,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACzE,kDAAkD;QAClD,IAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,cAAc,EAAG;YACpC,kCAAkC;YAClC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzB,0BAA0B;YAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;IAED,OAAO;QACL,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5B;IACH,CAAC;IAED,SAAS,CAAC,KAAa;QACrB,MAAM,UAAU,GAAG,IAAI,mEAAgB,EAAE,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,QAAQ;QACN,OAAO,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;IAChC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,WAAW;QACT,IAAI,IAAI,GAAG,UAAU,CAAC;QACtB,IAAI,IAAI,gDAAgD,CAAC;QACzD,IAAI,IAAI,aAAa,CAAC;QACtB,IAAI,IAAI,WAAW,GAAG,YAAY,GAAG,GAAG,CAAC;QACzC,IAAI,IAAI,sBAAsB,CAAC;QAC/B,IAAI,IAAI,YAAY,GAAG,kCAAkC,GAAG,GAAG,CAAC;QAChE,IAAI,IAAI,eAAe,GAAG,sDAAsD,CAAC;QACjF,OAAO,IAAI,CAAC;IACd,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACxB,OAAO,IAAI,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;SAC5D;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;;sEAjEU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAA2C;AACoB;;;AAUxD,MAAM,WAAW;IAItB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF3B,cAAS,GAAW,qDAAqD,CAAC;IAInF,CAAC;IAED,0CAA0C;IAC1C,UAAU,CAAC,KAAa;QACtB,IAAI,WAAW,GAAG;YAChB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SACjE,CAAC;QACF,IAAI,IAAI,GAAG;YACT,OAAO,EAAE,KAAK;SACf;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;IAC1F,CAAC;IAED,0CAA0C;IAC1C,WAAW,CAAC,UAAkB,EAAE,QAAgB,EAAE,KAAa;QAC7D,IAAI,WAAW,GAAG;YAChB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,KAAK;aACvB,CAAC;SACH,CAAC;QACF,IAAI,IAAI,GAAG;YACT,YAAY,EAAE,UAAU;YACxB,WAAW,EAAE,QAAQ;SACtB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;IACxF,CAAC;IAED,mCAAmC;IACnC,SAAS,CAAC,KAAY,EAAE,QAAgB,EAAE,KAAa;QAErD,IAAI,WAAW,GAAG;YAChB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,KAAK;aACvB,CAAC;SACH,CAAC;QACF,IAAI,IAAI,GAAG;YACT,UAAU,EAAE,KAAK,CAAC,EAAE;YACpB,YAAY,EAAE,KAAK,CAAC,KAAK;YACzB,WAAW,EAAG,QAAQ;SACvB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,GAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;IAC1F,CAAC;IAED,mCAAmC;IACnC,iBAAiB,CAAC,KAAY,EAAE,QAAgB,EAAE,KAAa;QAE7D,IAAI,WAAW,GAAG;YAChB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,KAAK;aACvB,CAAC;SACH,CAAC;QACF,IAAI,IAAI,GAAG;YACT,UAAU,EAAE,KAAK,CAAC,EAAE;YACpB,YAAY,EAAE,KAAK,CAAC,KAAK;YACzB,WAAW,EAAG,QAAQ;SACvB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,GAAC,wBAAwB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;IACrG,CAAC;IAED,aAAa,CAAC,QAAgB,EAAE,KAAa;QAC3C,IAAI,WAAW,GAAG;YAChB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,KAAK;aACvB,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAC,kBAAkB,GAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;IACtF,CAAC;IAGD,WAAW,CAAC,KAAY,EAAE,KAAa;QACrC,IAAI,WAAW,GAAG;YAChB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,KAAK;aACvB,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,GAAC,gBAAgB,GAAC,KAAK,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;IACjF,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,WAAW,GAAG;YAChB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,KAAK;aACvB,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC;IACxE,CAAC;;sEAjGU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BoardComponent } from './board/board.component';\nimport { BoardOfTheDayComponent } from './board-of-the-day/board-of-the-day.component';\n\n\nconst routes: Routes = [\n  { path: '', component: BoardOfTheDayComponent},\n  { path: 'my-boards', component: BoardComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title: string = 'Sudoku Solver Capstone';\n  user_info: Object;\n  loginUrl: string = '';\n\n  constructor(private auth: AuthService) {\n\n  }\n\n  ngOnInit(): void {\n    this.auth.check_token_fragment();\n    this.user_info = this.auth.getUserInfo();\n    this.loginUrl = this.auth.getLoginUrl();\n    console.log(this.loginUrl);\n\n  }\n\n  logout(): void {\n    this.auth.logout();\n    this.user_info = null;\n  }\n}\n","<header>\n    <div class=\"container\">\n        <a href=\"#\" class=\"logo\">Sudoku Solver</a>\n        <nav>\n            <ul>\n                <li><a href=\"#\" routerLink=\"/\">Board of the Day</a></li>\n                <li><a href=\"my-boards\" routerLink=\"/my-boards\">My Boards</a></li>\n                <li *ngIf=\"!user_info\"><a [href]=\"loginUrl\">Login</a></li>\n                <li *ngIf=\"user_info\"><img [src]=\"user_info['picture']\" alt=\"\"></li>\n                <li *ngIf=\"user_info\"><a>{{ user_info['name'] }}</a></li>\n                <li *ngIf=\"user_info\"><a href=\"\" (click)=\"logout()\">Logout</a></li>\n            </ul>\n        </nav>\n    </div>\n</header>\n\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BoardComponent } from './board/board.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BoardOfTheDayComponent } from './board-of-the-day/board-of-the-day.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoardComponent,\n    BoardOfTheDayComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http.service';\nimport { Observable } from 'rxjs';\nimport { Board } from '../board/board';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-board-of-the-day',\n  templateUrl: './board-of-the-day.component.html',\n  styleUrls: ['./board-of-the-day.component.scss']\n})\nexport class BoardOfTheDayComponent implements OnInit {\n  board_of_the_day: Board;\n  user_message: string;\n  readonly board_size = [1,2,3,4,5,6,7,8,9];\n  user_boards: Board[];\n  isAdmin: boolean;\n\n  constructor(private _http: HttpService, public auth: AuthService) {\n    let payload = this.auth.getPayload();\n    if (payload == null) { return; }\n    this.isAdmin = payload[\"permissions\"].includes(\"add:sudoku-of-the-day\");\n  }\n\n  ngOnInit(): void {\n    // Initialize empty board\n    this.board_of_the_day = Board.getBlankBoard();\n    this.user_message = \"\";\n\n    // Display the board of the day\n    this.displayBoardOfTheDay();\n  }\n\n  // Set shading\n  setClass(column, row) {\n    let myClasses = {\n      grey_cell: (2 < row && row <= 5) || (2 < column && column <= 5),\n      white_cell: (2 < row && row <= 5) && (2 < column && column <= 5)\n    }\n    return myClasses;\n  }\n\n  // Fetch the board of the day\n  displayBoardOfTheDay(): void {\n    let response: Observable<Object> = this._http.getBoardOfTheDay(this.auth.getToken());\n    response.subscribe(\n      value => {\n\n        // Ensure board of the day is available\n        if (value == null) {\n          this.user_message = \"Board of the day unavailable.\";\n        }\n\n        // Set board object\n        this.board_of_the_day = JSON.parse(JSON.stringify(new Board(\n          value[\"board_id\"],\n          value[\"board_json\"],\n          value[\"board_json_solved\"],\n          value[\"board_json\"])));\n      },\n      error => console.log(\"error: \"+error),\n      () => console.log(\"complete\")\n    );\n  }\n\n  // Reset the board to the original\n  resetBoard(): void {\n    this.board_of_the_day.board = JSON.parse(JSON.stringify(this.board_of_the_day.board_original));\n  }\n\n  // Administrator's ability to change the board of the day\n  saveBoard(): void {\n    let board: Board = this.sanitizeBoardData();\n    let userInfo = this.auth.getUserInfo();\n    if (userInfo == null) {\n      this.user_message = \"Problem with login. Please log out and back in.\";\n      return;\n    }\n    let response: Observable<Object> = this._http.saveBoardOfTheDay(board, userInfo, this.auth.getToken());\n    response.subscribe(\n      value => {\n        this.user_message = \"Saved!\";\n      },\n      error => console.log(\"error: \"+error),\n      () => console.log(\"complete\")\n    );\n  }\n\n  // Sanitize board data; ensure that all input is the same format\n  sanitizeBoardData(): Board {\n    let newBoard: Board = JSON.parse(JSON.stringify(this.board_of_the_day));\n    for (let row = 0; row < Object.keys(newBoard.board).length; row++) {\n      for (let column = 0; column < newBoard.board[row].length; column++) {\n        const element = newBoard.board[row][column];\n        if(typeof element == \"string\"){\n          newBoard.board[row][column] = parseInt(element);\n        } else {\n          newBoard.board[row][column] = element;\n        }\n      }\n    }\n\n    return newBoard;\n  }\n\n  // Detect keyboard input in order to\n  changed(event): void {\n    let sanitizeBoard = this.sanitizeBoardData();\n    if (\n      JSON.stringify(sanitizeBoard.board) ==\n      JSON.stringify(sanitizeBoard.board_solved)) {\n      this.user_message = \"Solved! Congratulations\";\n    } else {\n      this.user_message = \"Not solved yet...\";\n    }\n  }\n}\n","<h1>Board of the Day</h1>\n<p>The Board Of The Day is a fun and easy sudoku puzzle that\n  cannot be saved but will automatically notify you once it\n  has been successfully completed.\n</p>\n<br>\n<br>\n<div class=\"container\">\n  <h3>{{ user_message }}</h3>\n</div>\n<div class=\"container\">\n  <table *ngIf=\"board_of_the_day\" (keyup)=\"changed($event)\">\n    <tr *ngFor=\"let row of board_size; index as i;\">\n        <td><input id=\"{{ i }}-0\" [ngClass]=\"setClass(0, i)\" [(ngModel)]=\"board_of_the_day.board[i][0]\"></td>\n        <td><input id=\"{{ i }}-1\" [ngClass]=\"setClass(1, i)\" [(ngModel)]=\"board_of_the_day.board[i][1]\"></td>\n        <td><input id=\"{{ i }}-2\" [ngClass]=\"setClass(2, i)\" [(ngModel)]=\"board_of_the_day.board[i][2]\"></td>\n        <td><input id=\"{{ i }}-3\" [ngClass]=\"setClass(3, i)\" [(ngModel)]=\"board_of_the_day.board[i][3]\"></td>\n        <td><input id=\"{{ i }}-4\" [ngClass]=\"setClass(4, i)\" [(ngModel)]=\"board_of_the_day.board[i][4]\"></td>\n        <td><input id=\"{{ i }}-5\" [ngClass]=\"setClass(5, i)\" [(ngModel)]=\"board_of_the_day.board[i][5]\"></td>\n        <td><input id=\"{{ i }}-6\" [ngClass]=\"setClass(6, i)\" [(ngModel)]=\"board_of_the_day.board[i][6]\"></td>\n        <td><input id=\"{{ i }}-7\" [ngClass]=\"setClass(7, i)\" [(ngModel)]=\"board_of_the_day.board[i][7]\"></td>\n        <td><input id=\"{{ i }}-8\" [ngClass]=\"setClass(8, i)\" [(ngModel)]=\"board_of_the_day.board[i][8]\"></td>\n    </tr>\n  </table>\n</div>\n<div class=\"container\">\n  <button (click)=\"resetBoard()\">Reset Board</button>\n  <button *ngIf=\"isAdmin\" (click)=\"saveBoard()\">Save Board</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http.service';\nimport { Observable } from 'rxjs';\nimport { Board } from './board';\nimport { AuthService } from '../services/auth.service';\n\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})\nexport class BoardComponent implements OnInit {\n    board: Board;\n    user_message: string;\n    readonly board_size = [1,2,3,4,5,6,7,8,9];\n    user_boards: Board[];\n\n    constructor(private _http: HttpService, public auth: AuthService) { }\n\n    ngOnInit() {\n      // Initialize empty board\n      this.board = Board.getBlankBoard();\n      this.user_message = \"\";\n\n      // If the user is logged in and user_boards is empty, attempt loading\n      // the user's boards.\n      if (this.auth.getUserInfo() != null && this.user_boards == null) {\n        this.displayUserBoards();\n      }\n    }\n\n    // Set shading\n    setClass(column, row) {\n      let myClasses = {\n        grey_cell: (2 < row && row <= 5) || (2 < column && column <= 5),\n        white_cell: (2 < row && row <= 5) && (2 < column && column <= 5)\n      }\n      return myClasses;\n    }\n\n\n    // Solve the sudoku puzzle\n    solveRandomBoard() {\n      this.user_message = \"not implemented\";\n    }\n\n    solveBoard() {\n      this.board.board = JSON.parse(JSON.stringify(this.board.board_solved));\n    }\n\n    // Retrieve a new board for the user to solve\n    newBoard() {\n      // TODO(jordanhuus): remove hard code\n      let response: Observable<Object> = this._http.getNewBoard(\n          \"easy\", this.auth.getUserInfo(), this.auth.getToken());\n      response.subscribe(\n        value => {\n          this.board = new Board(\n            value[\"board_id\"],\n            value[\"board_json\"],\n            value[\"board_json_solved\"],\n            value[\"board_json\"]);\n\n          // Display all user boards\n          this.displayUserBoards(value[\"board_id\"]);\n        },\n        error => console.log(\"error: \"+error),\n        () => console.log(\"complete\")\n      );\n    }\n\n    // Display the original version after initially created\n    resetBoard() {\n      this.board.board = JSON.parse(\n        JSON.stringify(this.board.board_original));\n    }\n\n    // Save this.board's progress\n    saveBoard() {\n      let board: Board = this.sanitizeBoardData();\n      let userInfo = this.auth.getUserInfo();\n      if (userInfo == null) {\n        this.user_message = \"Problem with login. Please log out and back in.\";\n        return;\n      }\n      let response: Observable<Object> = this._http.saveBoard(board, userInfo, this.auth.getToken());\n      response.subscribe(\n        value => {\n          this.user_message = \"Saved!\";\n\n          // Display list of user boards\n          this.user_boards = [];\n          for (let i = 0; i < Object.keys(value[\"user_boards\"]).length; i++) {\n            const element = value[\"user_boards\"][i];\n            let newBoard: Board = new Board(\n              element[\"board_id\"],\n              element[\"board_json\"],\n              element[\"board_json_solved\"],\n              element[\"board_json\"]\n            );\n            this.user_boards.push(newBoard);\n          }\n        },\n        error => console.log(\"error: \"+error),\n        () => console.log(\"complete\")\n      );\n    }\n\n    // Sanitize board data; ensure that all input is the same format\n    sanitizeBoardData(): Board {\n      let newBoard: Board = JSON.parse(JSON.stringify(this.board));\n      for (let row = 0; row < Object.keys(newBoard.board).length; row++) {\n        for (let column = 0; column < newBoard.board[row].length; column++) {\n          const element = newBoard.board[row][column];\n          if(typeof element == \"string\"){\n            newBoard.board[row][column] = parseInt(element);\n          } else {\n            newBoard.board[row][column] = element;\n          }\n        }\n      }\n\n      return newBoard;\n    }\n\n    // Detect keyboard input in order to\n    changed(event): void {\n      let sanitizeBoard = this.sanitizeBoardData();\n      if (\n        JSON.stringify(sanitizeBoard.board) ==\n        JSON.stringify(sanitizeBoard.board_solved)) {\n        this.user_message = \"Solved! Congratulations\";\n      } else {\n        this.user_message = \"Not solved yet...\";\n      }\n    }\n\n    // Get a specific board from the server\n    getBoard(i: number): void {\n      this.board = JSON.parse(JSON.stringify(new Board(\n        this.user_boards[i].id,\n        this.user_boards[i].board,\n        this.user_boards[i].board_solved,\n        this.user_boards[i].board)));\n    }\n\n    // Display all of the user's saved boards\n    displayUserBoards(main_board_id: number = null): void {\n      let response: Observable<Object> = this._http.getUserBoards(this.auth.getUserInfo(), this.auth.getToken());\n      response.subscribe(\n        value => {\n          // User has no saved boards\n          if (value == null || value == \"\") { return }\n\n          // Display the main board based on ID - or - random (unspecified) board\n          let chosen_board_index: number = 0;\n          if (main_board_id != null) {\n            for (let i=0; i < Object.keys(value).length; i++) {\n              if (value[i].board_id == main_board_id) {\n                chosen_board_index = i;\n              }\n            }\n          }\n\n          // Retrieve user's baord data\n          this.board = JSON.parse(JSON.stringify(new Board(\n            value[chosen_board_index][\"board_id\"],\n            value[chosen_board_index][\"board_json\"],\n            value[chosen_board_index][\"board_json_solved\"],\n            value[chosen_board_index][\"board_json\"])));\n\n          // Display list of user boards\n          this.user_boards = [];\n          for (let i = 0; i < Object.keys(value).length; i++) {\n            const element = value[i];\n            let newBoard: Board = new Board(\n              element[\"board_id\"],\n              element[\"board_json\"],\n              element[\"board_json_solved\"],\n              element[\"board_json\"]\n            );\n            this.user_boards.push(newBoard);\n          }\n        },\n        error => console.log(\"error: \"+error),\n        () => console.log(\"complete\")\n      );\n    }\n\n    deleteBoard(i: number): void {\n\n      // DELETE request\n      let response: Observable<Object> = this._http.deleteBoard(this.board, this.auth.getToken());\n      response.subscribe(\n        value => {\n          this.user_message = \"\";\n\n          // Display list of user boards\n          this.user_boards = [];\n          for (let i = 0; i < Object.keys(value).length; i++) {\n            const element = value[i];\n            let newBoard: Board = new Board(\n              element[\"board_id\"],\n              element[\"board_json\"],\n              element[\"board_json_solved\"],\n              element[\"board_json\"]\n            );\n            this.user_boards.push(newBoard);\n          }\n        },\n        error => console.log(\"error: \"+error),\n        () => console.log(\"complete\")\n      );\n    }\n}\n","<div class=\"container\">\n  <table *ngIf=\"board\" (keyup)=\"changed($event)\">\n    <tr *ngFor=\"let row of board_size; index as i;\">\n        <td><input [ngClass]=\"setClass(0, i)\" [(ngModel)]=\"board.board[i][0]\"></td>\n        <td><input [ngClass]=\"setClass(1, i)\" [(ngModel)]=\"board.board[i][1]\"></td>\n        <td><input [ngClass]=\"setClass(2, i)\" [(ngModel)]=\"board.board[i][2]\"></td>\n        <td><input [ngClass]=\"setClass(3, i)\" [(ngModel)]=\"board.board[i][3]\"></td>\n        <td><input [ngClass]=\"setClass(4, i)\" [(ngModel)]=\"board.board[i][4]\"></td>\n        <td><input [ngClass]=\"setClass(5, i)\" [(ngModel)]=\"board.board[i][5]\"></td>\n        <td><input [ngClass]=\"setClass(6, i)\" [(ngModel)]=\"board.board[i][6]\"></td>\n        <td><input [ngClass]=\"setClass(7, i)\" [(ngModel)]=\"board.board[i][7]\"></td>\n        <td><input [ngClass]=\"setClass(8, i)\" [(ngModel)]=\"board.board[i][8]\"></td>\n    </tr>\n  </table>\n</div>\n<div class=\"container\">\n  <button (click)=\"solveBoard()\">Solve</button>\n  <button *ngIf=\"auth.payload\" (click)=\"newBoard()\">New Board</button>\n  <button *ngIf=\"auth.payload\" (click)=\"resetBoard()\">Reset Board</button>\n  <button *ngIf=\"auth.payload\" (click)=\"saveBoard()\">Save Board</button>\n  <!-- <button *ngIf=\"auth.payload\" (click)=\"getBoard()\">Get Board</button> -->\n  <h3>{{ user_message }}</h3>\n</div>\n<div class=\"container\" *ngIf=\"user_boards\">\n  <h3>Saved Boards</h3>\n  <ul class=\"saved_user_board_li\" *ngFor=\"let board_item of user_boards; index as i;\">\n    <li (click)=\"getBoard(i)\">\n      <table>\n        <tr *ngFor=\"let row of board_size; index as i;\">\n            <td><input [ngClass]=\"setClass(0, i)\" class=\"saved_user_board\" [(ngModel)]=\"board_item.board[i][0]\" disabled></td>\n            <td><input [ngClass]=\"setClass(1, i)\" class=\"saved_user_board\" [(ngModel)]=\"board_item.board[i][1]\" disabled></td>\n            <td><input [ngClass]=\"setClass(2, i)\" class=\"saved_user_board\" [(ngModel)]=\"board_item.board[i][2]\" disabled></td>\n            <td><input [ngClass]=\"setClass(3, i)\" class=\"saved_user_board\" [(ngModel)]=\"board_item.board[i][3]\" disabled></td>\n            <td><input [ngClass]=\"setClass(4, i)\" class=\"saved_user_board\" [(ngModel)]=\"board_item.board[i][4]\" disabled></td>\n            <td><input [ngClass]=\"setClass(5, i)\" class=\"saved_user_board\" [(ngModel)]=\"board_item.board[i][5]\" disabled></td>\n            <td><input [ngClass]=\"setClass(6, i)\" class=\"saved_user_board\" [(ngModel)]=\"board_item.board[i][6]\" disabled></td>\n            <td><input [ngClass]=\"setClass(7, i)\" class=\"saved_user_board\" [(ngModel)]=\"board_item.board[i][7]\" disabled></td>\n            <td><input [ngClass]=\"setClass(8, i)\" class=\"saved_user_board\" [(ngModel)]=\"board_item.board[i][8]\" disabled></td>\n        </tr>\n      </table>\n      <button (click)=\"deleteBoard(i)\">Delete Board</button>\n    </li>\n  </ul>\n</div>\n","export class Board {\n  public id: number;\n  public board: Object;\n  public board_solved: Object;\n  public board_original: Object;\n\n  public constructor(id: number,\n                     board: Object,\n                     board_solved: Object,\n                     board_original: Object) {\n    this.id = id;\n    this.board = board;\n    this.board_solved = board_solved;\n    this.board_original = board_original;\n  }\n\n  format(): Object {\n    return {\n      \"id\": this.id,\n      \"board\": this.board,\n      \"board_solved\": this.board_solved,\n      \"board_original\": this.board_original\n    }\n  }\n\n  // Returns a blank board Object\n  static getBlankBoard(): Board {\n    let blankBoard: Board = new Board(\n      0,\n      {\n        0: [null,null,null,null,null,null,null,null,null],\n        1: [null,null,null,null,null,null,null,null,null],\n        2: [null,null,null,null,null,null,null,null,null],\n        3: [null,null,null,null,null,null,null,null,null],\n        4: [null,null,null,null,null,null,null,null,null],\n        5: [null,null,null,null,null,null,null,null,null],\n        6: [null,null,null,null,null,null,null,null,null],\n        7: [null,null,null,null,null,null,null,null,null],\n        8: [null,null,null,null,null,null,null,null,null],\n      },\n      {\n        0: [null,null,null,null,null,null,null,null,null],\n        1: [null,null,null,null,null,null,null,null,null],\n        2: [null,null,null,null,null,null,null,null,null],\n        3: [null,null,null,null,null,null,null,null,null],\n        4: [null,null,null,null,null,null,null,null,null],\n        5: [null,null,null,null,null,null,null,null,null],\n        6: [null,null,null,null,null,null,null,null,null],\n        7: [null,null,null,null,null,null,null,null,null],\n        8: [null,null,null,null,null,null,null,null,null],\n      },\n      {\n        0: [null,null,null,null,null,null,null,null,null],\n        1: [null,null,null,null,null,null,null,null,null],\n        2: [null,null,null,null,null,null,null,null,null],\n        3: [null,null,null,null,null,null,null,null,null],\n        4: [null,null,null,null,null,null,null,null,null],\n        5: [null,null,null,null,null,null,null,null,null],\n        6: [null,null,null,null,null,null,null,null,null],\n        7: [null,null,null,null,null,null,null,null,null],\n        8: [null,null,null,null,null,null,null,null,null],\n      }\n    );\n    return blankBoard;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nconst JWTS_LOCAL_KEY = 'JWTS_LOCAL_KEY';\nconst JWTS_ACTIVE_INDEX_KEY = 'JWTS_ACTIVE_INDEX_KEY';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  token: string;\n  payload: any;\n\n\n  constructor() { }\n\n  // invoked in app.component on load\n  check_token_fragment(): void {\n    // parse the fragment\n    const fragment = window.location.hash.substr(1).split('&')[0].split('=');\n    // check if the fragment includes the access token\n    if ( fragment[0] === 'access_token' ) {\n      // add the access token to the jwt\n      this.token = fragment[1];\n      // save jwts to localstore\n      this.set_jwt();\n    }\n  }\n\n  set_jwt(): void {\n    localStorage.setItem(JWTS_LOCAL_KEY, this.token);\n    if (this.token) {\n      this.decodeJWT(this.token);\n    }\n  }\n\n  decodeJWT(token: string): void {\n    const jwtservice = new JwtHelperService();\n    this.payload = jwtservice.decodeToken(token);\n    return this.payload;\n  }\n\n  getPayload(): any {\n    return this.payload;\n  }\n\n  getToken(): string {\n    return \"bearer \" + this.token;\n  }\n\n  logout(): void {\n    this.token = '';\n    this.payload = null;\n    this.set_jwt();\n  }\n\n  getLoginUrl(): string {\n    let link = 'https://';\n    link += 'jordan-flask-authentication-practice.auth0.com';\n    link += '/authorize?';\n    link += 'audience=' + 'sudoku-api' + '&';\n    link += 'response_type=token&';\n    link += 'client_id=' + 'hTHs2lbL26VDIPLLzFffuWhsoJItrYDG' + '&';\n    link += 'redirect_uri=' + 'https://jmhuus-capstone-sudoku-solver.herokuapp.com/';\n    return link;\n  }\n\n  getUserInfo(): Object {\n    if (this.payload != null) {\n      return this.payload[\"http://www.jordanhuus.com/user_info\"];\n    } else {\n      return null;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Board } from '../board/board';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  readonly solve_url: string = \"https://jmhuus-capstone-sudoku-solver.herokuapp.com\";\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  // Post request to solve the sudoku puzzle\n  solveBoard(board: Object): Observable<Object> {\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n    let body = {\n      \"board\": board\n    }\n    return this.http.post(this.solve_url+\"/solve-board\", JSON.stringify(body), httpOptions);\n  }\n\n  // Post request to solve the sudoku puzzle\n  getNewBoard(difficulty: string, userInfo: Object, token: string): Observable<Object> {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    let body = {\n      \"difficulty\": difficulty,\n      \"user_info\": userInfo\n    }\n    return this.http.post(this.solve_url+\"/board-new\", JSON.stringify(body), httpOptions);\n  }\n\n  // Save the current boards progress\n  saveBoard(board: Board, userInfo: Object, token: string): Observable<Object> {\n\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    let body = {\n      \"board_id\": board.id,\n      \"board_json\": board.board,\n      \"user_info\":  userInfo\n    }\n    return this.http.patch(this.solve_url+\"/board-save\", JSON.stringify(body), httpOptions);\n  }\n\n  // Save the current boards progress\n  saveBoardOfTheDay(board: Board, userInfo: Object, token: string): Observable<Object> {\n\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    let body = {\n      \"board_id\": board.id,\n      \"board_json\": board.board,\n      \"user_info\":  userInfo\n    }\n    return this.http.patch(this.solve_url+\"/board-of-the-day-save\", JSON.stringify(body), httpOptions);\n  }\n\n  getUserBoards(userInfo: Object, token: string): Observable<Object> {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    return this.http.get(this.solve_url+\"/board-get-user/\"+userInfo[\"id\"], httpOptions);\n  }\n\n\n  deleteBoard(board: Board, token: string): Observable<Object> {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    return this.http.delete(this.solve_url+\"/board-delete/\"+board.id, httpOptions);\n  }\n\n  getBoardOfTheDay(token: string): Observable<Object> {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    return this.http.get(this.solve_url+\"/board-of-the-day\", httpOptions);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}